<?php

namespace Ailixter\Gears\Filter;

use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2018-11-18 at 21:13:15.
 */
class InputFilterTest extends TestCase
{

    /**
     * @var InputFilter
     */
    protected $object;

    private static $filter;
    public static function setUpBeforeClass()
    {
        self::$filter = new Filter([
            'custom' => FILTER_DEFAULT,
        ]);
    }
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new InputFilter(INPUT_SERVER, self::$filter);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    public function testGet()
    {
        self::assertInternalType('string', $this->object->getStr('PHP_SELF'));
    }

    public function testCastAll()
    {
        $actual = $this->object->castAll([
            'PHP_SELF'  => 'str',
            'undefined' => 'bool'
        ]);
        self::assertTrue(isset($actual['PHP_SELF']),  'PHP_SELF');
        self::assertTrue(array_key_exists('undefined', $actual));
        self::assertInternalType('string', $actual['PHP_SELF']);
        self::assertInternalType('null',   $actual['undefined']);
    }

}
